/* Generated By:JavaCC: Do not edit this line. brychxpinConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface brychxpinConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Void = 1;
  /** RegularExpression Id. */
  int system = 2;
  /** RegularExpression Id. */
  int random = 3;
  /** RegularExpression Id. */
  int Nespacio = 4;
  /** RegularExpression Id. */
  int caso = 5;
  /** RegularExpression Id. */
  int cerrar = 6;
  /** RegularExpression Id. */
  int sobrecarga = 7;
  /** RegularExpression Id. */
  int interfaz = 8;
  /** RegularExpression Id. */
  int Pausar = 9;
  /** RegularExpression Id. */
  int Faritmetica = 10;
  /** RegularExpression Id. */
  int Ftrigonometrica = 11;
  /** RegularExpression Id. */
  int Fstring = 12;
  /** RegularExpression Id. */
  int Flambda = 13;
  /** RegularExpression Id. */
  int Flineas = 14;
  /** RegularExpression Id. */
  int Fmensaje = 15;
  /** RegularExpression Id. */
  int Flimpiar = 16;
  /** RegularExpression Id. */
  int Ologicos = 17;
  /** RegularExpression Id. */
  int Orelacionales = 18;
  /** RegularExpression Id. */
  int condicional = 19;
  /** RegularExpression Id. */
  int defaults = 20;
  /** RegularExpression Id. */
  int acceso = 21;
  /** RegularExpression Id. */
  int booleano = 22;
  /** RegularExpression Id. */
  int ciclos = 23;
  /** RegularExpression Id. */
  int salto = 24;
  /** RegularExpression Id. */
  int Tdato = 25;
  /** RegularExpression Id. */
  int EDD = 26;
  /** RegularExpression Id. */
  int etiquetas = 27;
  /** RegularExpression Id. */
  int dentro = 28;
  /** RegularExpression Id. */
  int thread = 29;
  /** RegularExpression Id. */
  int ASIGANCION = 30;
  /** RegularExpression Id. */
  int alias = 31;
  /** RegularExpression Id. */
  int PAR_IZQ = 32;
  /** RegularExpression Id. */
  int PAR_DER = 33;
  /** RegularExpression Id. */
  int LLAVE_IZQ = 34;
  /** RegularExpression Id. */
  int LLAVE_DER = 35;
  /** RegularExpression Id. */
  int COR_IZQ = 36;
  /** RegularExpression Id. */
  int COR_DER = 37;
  /** RegularExpression Id. */
  int PUNTO = 38;
  /** RegularExpression Id. */
  int COMA = 39;
  /** RegularExpression Id. */
  int PUNTO_Y_COMA = 40;
  /** RegularExpression Id. */
  int DOS_PUNTOS = 41;
  /** RegularExpression Id. */
  int COMILLA = 42;
  /** RegularExpression Id. */
  int COMILLA_DOBLE = 43;
  /** RegularExpression Id. */
  int ARROBA = 44;
  /** RegularExpression Id. */
  int guionbajo = 45;
  /** RegularExpression Id. */
  int Omatematicos = 46;
  /** RegularExpression Id. */
  int numero = 47;
  /** RegularExpression Id. */
  int ID = 48;
  /** RegularExpression Id. */
  int letra_S = 49;
  /** RegularExpression Id. */
  int letra = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"Void\"",
    "\"System\"",
    "\"random\"",
    "\"namespace\"",
    "\"case\"",
    "\"Console.close\"",
    "\"Override\"",
    "\"interface\"",
    "\"pause\"",
    "<Faritmetica>",
    "<Ftrigonometrica>",
    "<Fstring>",
    "\"lambda\"",
    "<Flineas>",
    "<Fmensaje>",
    "<Flimpiar>",
    "<Ologicos>",
    "<Orelacionales>",
    "<condicional>",
    "<defaults>",
    "<acceso>",
    "<booleano>",
    "<ciclos>",
    "<salto>",
    "<Tdato>",
    "<EDD>",
    "<etiquetas>",
    "\"in\"",
    "\"Thread\"",
    "\"=\"",
    "\"as\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"@\"",
    "\"_\"",
    "<Omatematicos>",
    "<numero>",
    "<ID>",
    "<letra_S>",
    "<letra>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
  };

}
